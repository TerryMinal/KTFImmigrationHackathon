import sqlite3
import hashlib
import bridge
from os import path, remove
from pymongo import MongoClient


address = "gilvirgill.com"

checkerList = [" ","'"]

def authenticate( requestForm, userNames, passWords ):

    for i in checkerList:
        if( requestForm['username'].find(i) != -1 ):
            return "Username Cannot Contain Any Whitespace"
        if( requestForm['password'].find(i) != -1 ):
            return "Password Cannot Contain Any Whitespace"
        
    if( requestForm['username'] in userNames ):
        index = userNames.index(requestForm['username'])
        if passWords[index] == hashWord( requestForm['password'] ):
            return True
        else:
            return "Password Does Not Match"
    else:
        return "Username Not Found"

def register( requestForm, userNames, passWords ):
    '''
    for i in checkerList:
        if( str(requestForm['username']).find(i) != -1 ):
            return "Username Cannot Contain Any Whitespace"
        if( str(requestForm['password']).find(i) != -1 ):
            return "Password Cannot Contain Any Whitespace"
    '''
    
    if( requestForm['username'] in userNames ):
        return "Username Already Taken"
    elif requestForm['password2'] != requestForm['password1']:
        return "Passwords Do Not Match"
    else:
        #userNames.append( requestForm['user'] )
        #passWords.append( hashWord(requestForm['password']) )
        return addToDB( requestForm['username'], hashWord(requestForm['password1']))

def hashWord( strIn ):
    return hashlib.sha256(strIn).hexdigest()
    
def dbHandler( ):
    client = MongoClient('127.0.0.1')
    db = client.threadtigers
    cursor = db.users.find()
    userNames = []
    passWords = []
    for document in cursor:
        userNames.append( document['username'] );
        passWords.append( document['password'] );    
    return { 'usernames' : userNames, 'passwords' : passWords }

def addToDB( userName, passWord ):
    return bridge.createUser( { 'username': userName, 'password' : passWord } )

